<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.c4d2412t3p1.mapper.AttendanceMapper">
    
    <select id="select_ATTENDANCE" resultType="map">
	   SELECT 
	        a.*, 
	        e.EMPLOYEE_NM, 
	        c.COMMON_NM, 
	        e.EMPLOYEE_HD,
	        a.EMPLOYEE_CD,
	        CASE 
	            WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12) &lt; 1 
	            THEN TO_CHAR(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')))) || '개월'
	            ELSE TO_CHAR(FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12)) || '년'
	        END AS SERVICE_YEARS,
	        c.COMMON_NM AS DEPARTMENT_NAME,
	        CASE 
		        WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12) &lt; 1 
		            THEN TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd'))) + NVL(a.ANNUAL_RA, 0)
		        WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12) &lt; 3 
		            THEN 15 + NVL(a.ANNUAL_RA, 0)
		        ELSE 
		            LEAST(15 + FLOOR((FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12) - 3) / 2), 25) + NVL(a.ANNUAL_RA, 0)
		    END AS EXPECT_ANNUAL
	    FROM ANNUAL a
		LEFT JOIN EMPLOYEE e 
	       	   ON a.EMPLOYEE_CD = e.EMPLOYEE_CD
	    LEFT JOIN COMMON_CODE c
	       	   ON e.EMPLOYEE_DP = c.COMMON_CC
	   WHERE 1=1
	   		 AND c.COMMON_GC = 'DEPARTMENT'
			 AND EMPLOYEE_US = '1'
	   ORDER BY a.ANNUAL_YR DESC, a.EMPLOYEE_CD DESC
	</select>
    
    <select id="select_EMPLOYEE_ANNUAL" resultType="map">
        SELECT e.*, c.*
          FROM EMPLOYEE e
	 LEFT JOIN COMMON_CODE c ON e.EMPLOYEE_DP = c.COMMON_CC AND c.COMMON_GC = 'DEPARTMENT'
         WHERE 1=1
			   AND e.EMPLOYEE_NM LIKE '%' || #{employee_nm} || '%'
	  ORDER BY e.EMPLOYEE_CD DESC
    </select>
    
    <select id="select_filer_ANNUAL" resultType="map">
	    SELECT 
	        a.*,
	        e.EMPLOYEE_NM,
	        e.EMPLOYEE_HD,
	        c.COMMON_NM,
	        CASE 
		        WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12) &lt; 1 
		        THEN TO_CHAR(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')))) || '개월'
		        ELSE TO_CHAR(FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(e.EMPLOYEE_HD, 'yyyy-MM-dd')) / 12)) || '년'
		    END AS service_years
	    FROM ANNUAL a
		LEFT JOIN EMPLOYEE e 
	        ON a.EMPLOYEE_CD = e.EMPLOYEE_CD
        LEFT JOIN COMMON_CODE c
       	    ON e.EMPLOYEE_DP = c.COMMON_CC
	    <where> 1=1
	    		AND c.COMMON_GC = 'DEPARTMENT'
	        <if test="employee_cd != null and employee_cd != ''">
	            AND a.EMPLOYEE_CD = #{employee_cd}
	        </if>
	        <if test="employee_nm != null and employee_nm != ''">
	            AND e.EMPLOYEE_NM = #{employee_nm}
	        </if>
	        <if test="employee_dp != null and employee_dp != ''">
	            AND e.EMPLOYEE_DP = #{employee_dp}
	        </if>
	        <if test="employee_hd1 != null and employee_hd1 != '' and employee_hd2 != null and employee_hd2 != ''">
	            AND #{employee_hd1} &lt;= e.EMPLOYEE_HD AND e.EMPLOYEE_HD &lt;= #{employee_hd2}
	        </if>
	        <if test="annual_ra != null and annual_ra != ''">
	            AND a.ANNUAL_RA = #{annual_ra}
	        </if>
	    </where>
	   ORDER BY a.ANNUAL_YR DESC, a.EMPLOYEE_CD DESC
	</select>
	
	
    <insert id="insert_ANNUAL" parameterType="map">
		INSERT INTO ANNUAL (EMPLOYEE_CD
						    , ANNUAL_YR
						    , ANNUAL_UA
						    , ANNUAL_RA
						    , ANNUAL_AA
						    , ANNUAL_RU
						    , ANNUAL_RD
						    , ANNUAL_UU
						    , ANNUAL_UD
							)
					VALUES (#{EMPLOYEE_CD}
				        	, #{ANNUAL_YR} 
							, 0 
							, #{EXPECT_ANNUAL} 
							, #{EXPECT_ANNUAL} 
							, #{ANNUAL_RU} 
							, #{ANNUAL_RD} 
							, NULL
							, NULL)
	</insert>
	
	<select id="select_APPROVAL_ANNUAL" resultType="map">
		SELECT e.EMPLOYEE_NM
			   , a.APPROVAL_CD
			   , c.COMMON_NM EMPLOYEE_DP
			   , cc.COMMON_NM EMPLOYEE_GD
			   , a.APPROVAL_WR  
			   , a.APPROVAL_DV
			   , a.APPROVAL_AV
			   , JSON_VALUE(a.APPROVAL_CT, '$.annualtype') AS annualtype
		       , JSON_VALUE(a.APPROVAL_CT, '$.startday') AS startday
		       , JSON_VALUE(a.APPROVAL_CT, '$.endday') AS endday
		       , CASE 
		             WHEN JSON_VALUE(a.APPROVAL_CT, '$.annualtype') = 'AN' THEN 1
		             WHEN JSON_VALUE(a.APPROVAL_CT, '$.annualtype') = 'BN' THEN 0.5
		             ELSE 0 -- 병가
		          END AS mapped_value
		       , CASE
		       		 WHEN JSON_VALUE(a.APPROVAL_CT, '$.annualtype') = 'AN'
		             AND JSON_VALUE(a.APPROVAL_CT, '$.startday') &lt;&gt; JSON_VALUE(a.APPROVAL_CT, '$.endday') 
		         THEN 
		             TO_DATE(JSON_VALUE(a.APPROVAL_CT, '$.endday'), 'YYYY-MM-DD') 
		             - TO_DATE(JSON_VALUE(a.APPROVAL_CT, '$.startday'), 'YYYY-MM-DD') + 1
		         ELSE 0
		       END AS day_difference -- startday와 endday 간 차이 계산 (연차 갯수 계산)
		  FROM APPROVAL a 
	 LEFT JOIN EMPLOYEE e ON e.EMPLOYEE_CD = a.APPROVAL_WR 
	 LEFT JOIN COMMON_CODE c ON c.COMMON_GC = 'DEPARTMENT' AND c.COMMON_CC = e.EMPLOYEE_DP
	 LEFT JOIN COMMON_CODE cc ON cc.COMMON_GC = 'POSITION' AND cc.COMMON_CC = e.EMPLOYEE_GD
		 WHERE 1=1
		   AND a.APPROVAL_DV = '10'
		   AND a.APPROVAL_AV = '5'
<!--		   <if test="isAdmin == false">AND e.EMPLOYEE_CD = 'EM25-0014'</if>  사원이라면 동적추가(employee_rl != 'sys, at')-->
    </select>
	
</mapper>
