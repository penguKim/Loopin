<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.c4d2412t3p1.mapper.LotMapper">
    
    <select id="select_PROCESS_list" resultType="map">
    	SELECT PROCESS_NM AS common_nm, PROCESS_CD AS common_cc
    	  FROM PROCESS
    	 WHERE PROCESS_US = '1'
	</select>
	
    <select id="select_ACCOUNT_list" resultType="map">
    	SELECT ACCOUNT_NM AS common_nm, ACCOUNT_CD AS common_cc
    	  FROM ACCOUNT 
		 WHERE 1=1
 			   AND ACCOUNT_US = 1 
		 	   AND ACCOUNT_DV != 'ORDER'
	</select>
	
	<select id="select_LOT_list" resultType="map">
	    WITH WORKORDER_STATUS AS (
	        SELECT 
	            LOT_CD, 
	            PROCESS_CD, 
	            WORKORDER_ST,
	            ROW_NUMBER() OVER (
	                PARTITION BY LOT_CD 
	                ORDER BY 
	                    CASE 
	                        WHEN WORKORDER_ST = 'ÏßÑÌñâÏ§ë' THEN 1  -- ÏßÑÌñâÏ§ëÏù¥Î©¥ Ïö∞ÏÑ† ÏÑ†ÌÉù
	                        WHEN PROCESS_CD = 'ASSEMBLY' THEN 2  -- ÏóÜÏúºÎ©¥ ASSEMBLY Í≥µÏ†ï ÏÑ†ÌÉù
	                        ELSE 3 
	                    END, WORKORDER_SD DESC
	            ) AS RN
	        FROM WORKORDER
	    )
	    SELECT 
	        L.LOT_CD,
	        MIN(L.CONTRACT_CD) AS CONTRACT_CD,
	        MIN(L.PRODUCT_CD) AS PRODUCT_CD,
	        MIN(L.PRODUCT_SZ) AS PRODUCT_SZ,
	        MIN(L.PRODUCT_CR) AS PRODUCT_CR,
	        NVL(MIN(WS.PROCESS_CD), 'UPPER') AS PROCESS_CD,
	        TO_CHAR(MIN(L.LOT_CR), 'YYYY-MM-DD') AS LOT_CR,
	        NVL(MIN(WS.WORKORDER_ST), 'ÎåÄÍ∏∞') AS WORKORDER_ST
	    FROM LOT L
	    LEFT JOIN (
	        SELECT LOT_CD, PROCESS_CD, WORKORDER_ST 
	        FROM WORKORDER_STATUS 
	        WHERE RN = 1
	    ) WS ON WS.LOT_CD = L.LOT_CD
	    <where>
	        <if test="lot_cd != null and lot_cd != ''">
	            AND INSTR(L.LOT_CD, #{lot_cd}) > 0
	        </if>
	        <if test="contract_cd != null and contract_cd != ''">
	            AND INSTR(L.CONTRACT_CD, #{contract_cd}) > 0
	        </if>
	        <if test="product_cd != null and product_cd != ''">
	            AND INSTR(L.PRODUCT_CD, #{product_cd}) > 0
	        </if>
	        <if test="process_cd != null and process_cd != ''">
	            AND L.PROCESS_CD = #{process_cd}
	        </if>
	        <if test="workorder_st != null and workorder_st != '' and workorder_st != 'ALL'">
	            AND L.WORKORDER_ST = #{workorder_st}
	        </if>
	    </where>
	    GROUP BY L.LOT_CD
	    ORDER BY MIN(L.LOT_CR) DESC
	</select>

	
	
	<select id="select_LOT_json" resultType="map">
		WITH BOM_HIERARCHY (PRODUCT_CD, CURRENT_PROCESS, BOMPROCESS_CD, BOMPROCESS_AP, LVL) AS (
		    SELECT PRODUCT_CD, PROCESS_CD, BOMPROCESS_CD, BOMPROCESS_AP, 0 LVL
		    FROM BOMPROCESS
		    WHERE BOMPROCESS_AP = 'NONE'
		      AND PRODUCT_CD = #{PRODUCT_CD}
		    UNION ALL
		    SELECT BP.PRODUCT_CD, BP.PROCESS_CD, BP.BOMPROCESS_CD, BP.BOMPROCESS_AP, BH.LVL + 1 LVL
		    FROM BOMPROCESS BP
		    JOIN BOM_HIERARCHY BH 
		        ON BP.BOMPROCESS_AP = BH.CURRENT_PROCESS 
		       AND BP.PRODUCT_CD = BH.PRODUCT_CD
		    WHERE BP.PRODUCT_CD = #{PRODUCT_CD}
		),
		WORKORDER_STATUS AS (  
		    SELECT PROCESS_CD, LOT_CD, WORKORDER_ST AS process  
		    FROM WORKORDER
		    WHERE LOT_CD = #{LOT_CD}
		)
		SELECT JSON_OBJECT(
		    'name' VALUE #{PRODUCT_CD},
		    'title' VALUE 'Ï†úÌíà',
		    'process' VALUE NVL(W.process, 'ÎåÄÍ∏∞'),  -- üöÄ W.processÎ•º Ï∞∏Ï°∞Ìï† Ïàò ÏûàÎèÑÎ°ù JOIN
		    'lot_cd' VALUE #{LOT_CD},
		    'children' VALUE (
		        SELECT JSON_ARRAYAGG(
		            JSON_OBJECT(
		                'name' VALUE A.CURRENT_PROCESS,
		                'title' VALUE 'Î∞òÏ†úÌíà',
		                'process' VALUE NVL(W.process, 'ÎåÄÍ∏∞'),
		                'lot_cd' VALUE #{LOT_CD},
		                'children' VALUE (
		                    SELECT JSON_ARRAYAGG(
		                        JSON_OBJECT(
		                            'name' VALUE B.CURRENT_PROCESS,
		                            'title' VALUE 'Î∞òÏ†úÌíà',
		                            'process' VALUE NVL(W2.process, 'ÎåÄÍ∏∞'), 
					                'lot_cd' VALUE #{LOT_CD}
		                        )
		                    ) 
		                    FROM BOM_HIERARCHY B
		                    LEFT JOIN WORKORDER_STATUS W2 ON B.CURRENT_PROCESS = W2.PROCESS_CD 
		                    WHERE B.BOMPROCESS_AP = A.CURRENT_PROCESS
		                )
		            ) RETURNING CLOB
		        ) 
		        FROM BOM_HIERARCHY A
		        LEFT JOIN WORKORDER_STATUS W ON A.CURRENT_PROCESS = W.PROCESS_CD  
		        WHERE A.BOMPROCESS_AP = 'ASSEMBLY'
		    )
		) AS json_data
		FROM BOM_HIERARCHY BH
		LEFT JOIN WORKORDER_STATUS W ON BH.CURRENT_PROCESS = W.PROCESS_CD  -- üöÄ JSON_OBJECTÎ•º ÎßåÎìúÎäî ÏøºÎ¶¨Ïóê JOIN Ï∂îÍ∞Ä
		WHERE BH.BOMPROCESS_AP = 'NONE'
	</select>
	
	<select id="select_RESULT_list" resultType="map">
	    SELECT 
		    CD.CONTRACT_CD,
		    P.PRODUCT_NM PRODUCT_CD,
		    TO_CHAR(P.PRODUCT_PR, 'FM999,999,999,999') || 'Ïõê' AS PRODUCT_PR,
		    TO_CHAR(SUM(C.CONTRACT_AM), 'FM999,999,999,999') || 'Í∞ú' AS CONTRACT_AM, 
		    TO_CHAR(SUM(C.CONTRACT_MN), 'FM999,999,999,999') || 'Ïõê' AS CONTRACT_MN, -- Ïã§Ï†Å ÎπÑÍµêÌïú Îã§Ïùå Îã§Ïãú ÎÑ£Ïñ¥ÏïºÌï®
		    C.CONTRACT_ED,
		    C.CONTRACT_SD,
		    A.ACCOUNT_NM ACCOUNT_CD
		FROM CONTRACTDETAIL CD
	LEFT JOIN PRODUCT P ON CD.PRODUCT_CD = P.PRODUCT_CD
		 JOIN CONTRACT c ON CD.CONTRACT_CD = C.CONTRACT_CD AND C.CONTRACT_ST = 'ÏôÑÎ£å'
	LEFT JOIN ACCOUNT A ON A.ACCOUNT_CD = C.ACCOUNT_CD
		<where> 1=1
		    <if test="contract_cd != null and contract_cd != ''">
		        AND CD.CONTRACT_CD = #{contract_cd}
		    </if>
		    <if test="account_cd != null and account_cd != ''">
		        AND A.ACCOUNT_CD = #{account_cd}
		    </if>
		    <if test="product_cd != null and product_cd != ''">
		        AND P.PRODUCT_NM LIKE '%' || #{product_cd} || '%'
		    </if>
		    <if test="startDate != null and startDate != ''">
			    AND TO_TIMESTAMP(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') &lt;= C.CONTRACT_SD
			</if>
			<if test="endDate != null and endDate != ''">
			    AND TO_TIMESTAMP(#{endDate}, 'YYYY-MM-DD HH24:MI:SS') &gt;= C.CONTRACT_ED
			</if>
		</where>
	 GROUP BY CD.CONTRACT_CD, P.PRODUCT_NM, P.PRODUCT_PR, C.CONTRACT_ED, A.ACCOUNT_NM, C.CONTRACT_SD
		<if test="contract_am != null and contract_am != '' or product_pr != null and product_pr != ''">
			HAVING 
			<trim prefixOverrides="AND">
	            <if test="contract_am != null and contract_am != ''">
	                AND SUM(C.CONTRACT_AM) &gt;= TO_NUMBER(#{contract_am})
	            </if>
	            <if test="product_pr != null and product_pr != ''">
	                AND P.PRODUCT_PR &gt;= TO_NUMBER(#{product_pr})
	            </if>
	        </trim>
	    </if>
		<choose>
		    <when test="contract_mn == 'HIGH'">
		        ORDER BY SUM(C.CONTRACT_MN) DESC
		    </when>
		    <when test="contract_mn == 'LOW'">
		        ORDER BY SUM(C.CONTRACT_MN) ASC
		    </when>
		    <otherwise>
		        ORDER BY CD.CONTRACT_CD DESC  <!-- Í∏∞Î≥∏ Ï†ïÎ†¨ Ï°∞Í±¥ -->
		    </otherwise>
		</choose>
    </select>

	<select id="select_LOTHISTORY_list" resultType="map">
		SELECT LH.CONTRACT_CD
			   , LH.LOT_CD
			   , LH.PROCESS_CD
			   , L.PRODUCT_CR 
			   , L.PRODUCT_SZ 
			   , TO_CHAR(LOTHISTORY_BQ) AS LOTHISTORY_BQ
			   , TO_CHAR(LOTHISTORY_EN, 'YYYY-MM-DD') AS LOTHISTORY_EN
			   , TO_CHAR(LOTHISTORY_ST, 'YYYY-MM-DD') AS LOTHISTORY_ST
			   , TO_CHAR(LOTHISTORY_WQ) AS LOTHISTORY_WQ
    	  FROM LOTHISTORY LH
	 LEFT JOIN LOT L ON L.LOT_CD = LH.LOT_CD AND LH.PROCESS_CD = L.PROCESS_CD
		 WHERE 1=1
 			   AND LH.LOT_CD = #{lot_cd}
	</select>
</mapper>